name: Pull Request

on:
  pull_request:

permissions:
  contents: read
  pull-requests: write

jobs:
  test-pr:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: run linter
        run: |
          echo "Linter"
      - name: sumilate fail
        id: fail
        run: |
          echo "Something to stdout"
          exit 1
        continue-on-error: true
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 1. Retrieve existing bot comments for the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot'
            })

            // 2. Prepare format of the comment
            const output = `
            <details><summary>Comments</summary>
            Added some comments
            \n
            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            // 3. If we have a comment, update it, otherwise create a new one
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: execute if branch name starts from feature
        if: ${{ contains( github.ref, 'feature/' ) }}
        run: echo "Executed"
      - name: Check on failures
        if: steps.fail.outcome == 'failure'
        run: exit 1
